var searchIndex = JSON.parse('{\
"bench":{"doc":"","t":[3,17,5,11,11,5,11,5,5,11,12,12,11,5,11,11,11],"n":["ImplInfo","RESOLUTION","benchmark","borrow","borrow_mut","create_graph","from","graph_results","graph_results_for_file","into","millis","name","new","segmented_value_to_inner","try_from","try_into","type_id"],"q":["bench","","","","","","","","","","","","","","","",""],"d":["","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","",""],"i":[0,0,0,6,6,0,6,0,0,6,6,6,6,0,6,6,6],"f":[0,0,[[1,2,1,1],[[5,[3,4]]]],[[]],[[]],[[1,1],[[5,[4]]]],[[]],[[],[[5,[4]]]],[[1,1,1,1],[[5,[4]]]],[[]],0,0,[[1,2,1,1],[[5,[6,4]]]],[7],[[],5],[[],5],[[],8]],"p":[[15,"str"],[8,"RunFunction"],[15,"u128"],[4,"BfError"],[4,"Result"],[3,"ImplInfo"],[4,"SegmentValue"],[3,"TypeId"]]},\
"simpleinterp":{"doc":"","t":[0,5,0,13,13,13,13,4,13,13,3,13,13,11,11,11,11,11,11,11,11,11,11,12,11,11,11,5,11,11,11,11,11,11,17,5,5,5,5],"n":["parser","run","vm","DecData","DecPtr","IncData","IncPtr","Instruction","JumpIfNotZero","JumpIfZero","Program","Read","Write","borrow","borrow","borrow_mut","borrow_mut","eq","eq","fmt","fmt","from","from","instructions","into","into","ne","parse","try_from","try_from","try_into","try_into","type_id","type_id","MEMORY_SIZE","jump","read","run","write"],"q":["simpleinterp","","","simpleinterp::parser","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","simpleinterp::vm","","","",""],"d":["","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","",""],"i":[0,0,0,6,6,6,6,0,6,6,0,6,6,6,8,6,8,6,8,6,8,6,8,8,6,8,8,0,6,8,6,8,6,8,0,0,0,0,0],"f":[0,[[1,2,3],[[5,[4]]]],0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[6,6],7],[[8,8],7],[[6,9],10],[[8,9],10],[[]],[[]],0,[[]],[[]],[[8,8],7],[1,8],[[],5],[[],5],[[],5],[[],5],[[],11],[[],11],0,[[7,8,12,12],[[5,[4]]]],[2,[[5,[13,4]]]],[[8,2,3],[[5,[4]]]],[[3,13],[[5,[4]]]]],"p":[[15,"str"],[8,"Read"],[8,"Write"],[4,"BfError"],[4,"Result"],[4,"Instruction"],[15,"bool"],[3,"Program"],[3,"Formatter"],[6,"Result"],[3,"TypeId"],[15,"usize"],[15,"u8"]]},\
"util":{"doc":"","t":[13,4,13,13,8,13,0,0,5,12,12,12,12,13,4,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,8,5],"n":["Bf","BfError","DrawingArea","Io","RunFunction","TryFromInt","error","run","run_main","0","0","0","0","Bf","BfError","DrawingArea","Io","TryFromInt","borrow","borrow_mut","fmt","fmt","from","from","from","from","into","to_string","try_from","try_into","type_id","0","0","0","0","RunFunction","run_main"],"q":["util","","","","","","","","","util::BfError","","","","util::error","","","","","","","","","","","","","","","","","","util::error::BfError","","","","util::run",""],"d":["","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","",""],"i":[2,0,2,2,0,2,0,0,0,11,12,13,14,2,0,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,11,12,13,14,0,0],"f":[0,0,0,0,0,0,0,0,[1,[[3,[2]]]],0,0,0,0,0,0,0,0,0,[[]],[[]],[[2,4],5],[[2,4],5],[[]],[6,2],[7,2],[8,2],[[]],[[],9],[[],3],[[],3],[[],10],0,0,0,0,0,[1,[[3,[2]]]]],"p":[[8,"RunFunction"],[4,"BfError"],[4,"Result"],[3,"Formatter"],[6,"Result"],[4,"DrawingAreaErrorKind"],[3,"TryFromIntError"],[3,"Error"],[3,"String"],[3,"TypeId"],[13,"Bf"],[13,"DrawingArea"],[13,"TryFromInt"],[13,"Io"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
